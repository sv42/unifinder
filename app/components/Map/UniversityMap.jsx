import { useState, useEffect } from 'react';
import { Link } from 'react-router';
import { useUniversities } from '../../hooks/useUniversities';

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –≤–∞—Ä—Ç–æ—Å—Ç—ñ –Ω–∞–≤—á–∞–Ω–Ω—è
const formatTuition = (min, max, currency) => {
  if (min === 0 && max === 0) return "–ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ";
  if (min === max) return `${min} ${currency}/—Ä—ñ–∫`;
  return `${min}-${max} ${currency}/—Ä—ñ–∫`;
};

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó —Ç–∏–ø—É —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—É
const convertType = (type) => {
  return type === 'public' ? '–î–µ—Ä–∂–∞–≤–Ω–∏–π' : '–ü—Ä–∏–≤–∞—Ç–Ω–∏–π';
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–∞—Ä—Ç–∏, —è–∫–∏–π —Ä–µ–Ω–¥–µ—Ä–∏—Ç—å—Å—è —Ç—ñ–ª—å–∫–∏ –Ω–∞ –∫–ª—ñ—î–Ω—Ç—ñ
function ClientMap({ filteredUniversities, onUniversitySelect }) {
  const [mapComponents, setMapComponents] = useState(null);

  useEffect(() => {
    // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ Leaflet —Ç—ñ–ª—å–∫–∏ –Ω–∞ –∫–ª—ñ—î–Ω—Ç—ñ
    const loadMap = async () => {
      try {
        console.log('ClientMap: –ü–æ—á–∞—Ç–æ–∫ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–∞—Ä—Ç–∏...');
        
        // –î–æ–¥–∞—î–º–æ CSS –¥–ª—è Leaflet
        if (!document.querySelector('link[href*="leaflet"]')) {
          console.log('ClientMap: –î–æ–¥–∞–≤–∞–Ω–Ω—è Leaflet CSS...');
          const link = document.createElement('link');
          link.rel = 'stylesheet';
          link.href = 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.css';
          document.head.appendChild(link);
        }

        // –î–∏–Ω–∞–º—ñ—á–Ω–æ —ñ–º–ø–æ—Ä—Ç—É—î–º–æ React Leaflet –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏
        console.log('ClientMap: –Ü–º–ø–æ—Ä—Ç React Leaflet...');
        const { MapContainer, TileLayer, Marker, Popup, ZoomControl } = await import('react-leaflet');
        console.log('ClientMap: –Ü–º–ø–æ—Ä—Ç Leaflet...');
        const L = await import('leaflet');

        // –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–ª—è —ñ–∫–æ–Ω–æ–∫ Leaflet
        console.log('ClientMap: –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —ñ–∫–æ–Ω–æ–∫...');
        delete L.default.Icon.Default.prototype._getIconUrl;
        L.default.Icon.Default.mergeOptions({
          iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',
          iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',
          shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',
        });

        console.log('ClientMap: –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤ –∫–∞—Ä—Ç–∏...');
        setMapComponents({
          MapContainer,
          TileLayer,
          Marker,
          Popup,
          ZoomControl
        });
        console.log('ClientMap: –ö–∞—Ä—Ç–∞ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞!');
      } catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–∞—Ä—Ç–∏:', error);
        console.error('–î–µ—Ç–∞–ª—ñ –ø–æ–º–∏–ª–∫–∏:', error.message);
        console.error('Stack trace:', error.stack);
      }
    };

    loadMap();
  }, []);

  if (!mapComponents) {
    return (
      <div className="w-full h-full bg-gray-100 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-gray-600">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–∞—Ä—Ç–∏ –Ñ–≤—Ä–æ–ø–∏...</p>
        </div>
      </div>
    );
  }

  const { MapContainer, TileLayer, Marker, Popup, ZoomControl } = mapComponents;

  return (
    <MapContainer
      center={[50.0, 20.0]}
      zoom={5}
      style={{ height: '100%', width: '100%' }}
      zoomControl={false}
      minZoom={3}
      maxZoom={19}
    >
      <TileLayer
        attribution='&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
        subdomains={['a', 'b', 'c']}
      />
      <ZoomControl position="topright" />

      {/* –ú–∞—Ä–∫–µ—Ä–∏ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—ñ–≤ */}
      {filteredUniversities.map((university) => (
        <Marker
          key={university.id}
          position={university.coordinates}
          eventHandlers={{
            click: () => onUniversitySelect(university),
          }}
        >
          <Popup>
            <div className="p-2 max-w-xs">
              <h3 className="font-semibold text-gray-900 text-sm mb-2">
                {university.name}
              </h3>
              
              <div className="space-y-1 text-xs text-gray-600">
                <div>üìç {university.city}, {university.country}</div>
                <div>üèõÔ∏è {university.type}</div>
                <div>‚≠ê –†–µ–π—Ç–∏–Ω–≥: {university.rating.toFixed(1)}/5</div>
                <div>üí∞ {university.tuition}</div>
              </div>

              {university.description && (
                <div className="mt-3">
                  <h4 className="font-medium text-xs text-gray-700 mb-1">–û–ø–∏—Å:</h4>
                  <p className="text-xs text-gray-600">
                    {university.description.length > 80 
                      ? `${university.description.substring(0, 80)}...` 
                      : university.description
                    }
                  </p>
                </div>
              )}

              {university.programs && university.programs.length > 0 && (
                <div className="mt-3">
                  <h4 className="font-medium text-xs text-gray-700 mb-1">–ü—Ä–æ–≥—Ä–∞–º–∏:</h4>
                  <div className="flex flex-wrap gap-1">
                    {university.programs.slice(0, 3).map((program, index) => (
                      <span key={index} className="px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded">
                        {program}
                      </span>
                    ))}
                    {university.programs.length > 3 && (
                      <span className="px-2 py-1 bg-gray-100 text-gray-600 text-xs rounded">
                        +{university.programs.length - 3}
                      </span>
                    )}
                  </div>
                </div>
              )}

              <div className="mt-3 flex space-x-2">
                <Link
                  to={`/university/${university.id}`}
                  className="px-3 py-1 bg-blue-600 text-white text-xs rounded hover:bg-blue-700 transition-colors"
                >
                  –î–µ—Ç–∞–ª—ñ
                </Link>
                <button className="px-3 py-1 bg-gray-200 text-gray-700 text-xs rounded hover:bg-gray-300 transition-colors">
                  ‚ù§Ô∏è –£–ª—é–±–ª–µ–Ω–µ
                </button>
              </div>
            </div>
          </Popup>
        </Marker>
      ))}
    </MapContainer>
  );
}

export default function UniversityMap() {
  const [selectedUniversity, setSelectedUniversity] = useState(null);
  const [filters, setFilters] = useState({
    country: 'all',
    type: 'all',
    minRating: 0
  });
  const [isClient, setIsClient] = useState(false);

  // –û—Ç—Ä–∏–º—É—î–º–æ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç–∏ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
  const { universities, loading, error, fetchUniversities } = useUniversities();

  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –º–∏ –Ω–∞ –∫–ª—ñ—î–Ω—Ç—ñ
  useEffect(() => {
    console.log('UniversityMap: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–ª—ñ—î–Ω—Ç–∞...');
    setIsClient(true);
    console.log('UniversityMap: isClient –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤ true');
  }, []);

  // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç–∏ –ø—Ä–∏ –º–æ–Ω—Ç—É–≤–∞–Ω–Ω—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    console.log('UniversityMap: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—ñ–≤...');
    fetchUniversities();
  }, [fetchUniversities]);

  // –õ–æ–≥—É—î–º–æ –∑–º—ñ–Ω–∏ –≤ –¥–∞–Ω–∏—Ö –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
  useEffect(() => {
    console.log('UniversityMap: –û—Ç—Ä–∏–º–∞–Ω–æ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—ñ–≤:', universities.length);
    console.log('UniversityMap: –°—Ç–∞–Ω –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è:', loading);
    console.log('UniversityMap: –ü–æ–º–∏–ª–∫–∞:', error);
  }, [universities, loading, error]);

  // –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ –¥–∞–Ω—ñ –∑ –ë–î —É —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –∫–∞—Ä—Ç–∏
  const mapUniversities = universities
    .filter(uni => uni.latitude && uni.longitude) // –§—ñ–ª—å—Ç—Ä—É—î–º–æ —Ç—ñ–ª—å–∫–∏ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç–∏ –∑ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
    .map(uni => ({
      id: uni.id,
      name: uni.name,
      country: uni.country,
      city: uni.city,
      coordinates: [parseFloat(uni.latitude), parseFloat(uni.longitude)],
      type: convertType(uni.type),
      rating: uni.rating ? uni.rating / 2 : 0, // –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ –∑ 10-–±–∞–ª—å–Ω–æ—ó —à–∫–∞–ª–∏ –≤ 5-–±–∞–ª—å–Ω—É
      programs: [], // –ü–æ–∫–∏ —â–æ –ø–æ—Ä–æ–∂–Ω—ñ–π –º–∞—Å–∏–≤, –º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –ø—ñ–∑–Ω—ñ—à–µ
      tuition: formatTuition(uni.tuition_fee_min, uni.tuition_fee_max, uni.currency),
      description: uni.description
    }));

  // Fallback –¥–∞–Ω—ñ, —è–∫—â–æ –ë–î –Ω–µ –ø—Ä–∞—Ü—é—î
  const fallbackUniversities = [
    {
      id: 'fallback-1',
      name: "–ö–∏—ó–≤—Å—å–∫–∏–π –Ω–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏–π —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç —ñ–º–µ–Ω—ñ –¢–∞—Ä–∞—Å–∞ –®–µ–≤—á–µ–Ω–∫–∞",
      country: "–£–∫—Ä–∞—ó–Ω–∞",
      city: "–ö–∏—ó–≤",
      coordinates: [50.4501, 30.5234],
      type: "–î–µ—Ä–∂–∞–≤–Ω–∏–π",
      rating: 4.5,
      programs: ["–ö–æ–º–ø'—é—Ç–µ—Ä–Ω—ñ –Ω–∞—É–∫–∏", "–ú–µ–¥–∏—Ü–∏–Ω–∞", "–ü—Ä–∞–≤–æ"],
      tuition: "1500-3000 USD/—Ä—ñ–∫",
      description: "–û–¥–∏–Ω –∑ –Ω–∞–π—Å—Ç–∞—Ä—ñ—à–∏—Ö —Ç–∞ –Ω–∞–π–ø—Ä–µ—Å—Ç–∏–∂–Ω—ñ—à–∏—Ö —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—ñ–≤ –£–∫—Ä–∞—ó–Ω–∏"
    },
    {
      id: 'fallback-2',
      name: "–õ—å–≤—ñ–≤—Å—å–∫–∏–π –Ω–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏–π —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç —ñ–º–µ–Ω—ñ –Ü–≤–∞–Ω–∞ –§—Ä–∞–Ω–∫–∞",
      country: "–£–∫—Ä–∞—ó–Ω–∞",
      city: "–õ—å–≤—ñ–≤",
      coordinates: [49.8397, 24.0297],
      type: "–î–µ—Ä–∂–∞–≤–Ω–∏–π",
      rating: 4.3,
      programs: ["–Ü—Å—Ç–æ—Ä—ñ—è", "–§—ñ–ª–æ–ª–æ–≥—ñ—è", "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞"],
      tuition: "1200-2500 USD/—Ä—ñ–∫",
      description: "–ü—Ä–æ–≤—ñ–¥–Ω–∏–π —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç –ó–∞—Ö—ñ–¥–Ω–æ—ó –£–∫—Ä–∞—ó–Ω–∏"
    }
  ];

  // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –¥–∞–Ω—ñ –∑ –ë–î –∞–±–æ fallback
  const universitiesToUse = mapUniversities.length > 0 ? mapUniversities : fallbackUniversities;

  // –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—ñ–≤
  const filteredUniversities = universitiesToUse.filter(uni => {
    if (filters.country !== 'all' && uni.country !== filters.country) return false;
    if (filters.type !== 'all' && uni.type !== filters.type) return false;
    if (uni.rating < filters.minRating) return false;
    return true;
  });

  const getMarkerColor = (type) => {
    switch (type) {
      case '–î–µ—Ä–∂–∞–≤–Ω–∏–π': return '#3B82F6';
      case '–ü—Ä–∏–≤–∞—Ç–Ω–∏–π': return '#10B981';
      default: return '#6B7280';
    }
  };

  return (
    <div className="w-full h-[600px] relative" style={{ minHeight: '600px' }}>
      {/* –§—ñ–ª—å—Ç—Ä–∏ */}
      <div className="absolute top-4 left-4 z-[1000] bg-white p-4 rounded-lg shadow-lg">
        <h3 className="font-semibold text-gray-900 mb-3">–§—ñ–ª—å—Ç—Ä–∏</h3>
        
        <div className="space-y-3">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">
              –ö—Ä–∞—ó–Ω–∞
            </label>
            <select 
              value={filters.country}
              onChange={(e) => setFilters({...filters, country: e.target.value})}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 text-gray-900 bg-white"
            >
              <option value="all" className="text-gray-900">–í—Å—ñ –∫—Ä–∞—ó–Ω–∏</option>
              {Array.from(new Set(universitiesToUse.map(uni => uni.country))).sort().map(country => (
                <option key={country} value={country} className="text-gray-900">
                  {country}
                </option>
              ))}
            </select>
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">
              –¢–∏–ø —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—É
            </label>
            <select 
              value={filters.type}
              onChange={(e) => setFilters({...filters, type: e.target.value})}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 text-gray-900 bg-white"
            >
              <option value="all" className="text-gray-900">–í—Å—ñ —Ç–∏–ø–∏</option>
              <option value="–î–µ—Ä–∂–∞–≤–Ω–∏–π" className="text-gray-900">–î–µ—Ä–∂–∞–≤–Ω–∏–π</option>
              <option value="–ü—Ä–∏–≤–∞—Ç–Ω–∏–π" className="text-gray-900">–ü—Ä–∏–≤–∞—Ç–Ω–∏–π</option>
            </select>
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">
              –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥: {filters.minRating}
            </label>
            <input 
              type="range" 
              min="0" 
              max="5" 
              step="0.1"
              value={filters.minRating}
              onChange={(e) => setFilters({...filters, minRating: parseFloat(e.target.value)})}
              className="w-full"
            />
          </div>
        </div>

        <div className="mt-4 text-sm text-gray-600">
          –ó–Ω–∞–π–¥–µ–Ω–æ: {filteredUniversities.length} —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—ñ–≤
          {mapUniversities.length === 0 && universities.length === 0 && !loading && (
            <div className="mt-2 text-xs text-orange-600">
              ‚ö†Ô∏è –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è –¥–µ–º–æ-–¥–∞–Ω—ñ (–ë–î –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞)
            </div>
          )}
        </div>
      </div>

      {/* –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è */}
      {loading && (
        <div className="w-full h-full bg-gray-50 flex items-center justify-center">
          <div className="text-center">
            <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
            <p className="text-gray-600">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—ñ–≤ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö...</p>
          </div>
        </div>
      )}

      {/* –ü–æ–º–∏–ª–∫–∞ */}
      {error && (
        <div className="w-full h-full bg-gray-50 flex items-center justify-center">
          <div className="text-center">
            <div className="inline-flex items-center px-4 py-2 bg-red-100 text-red-700 rounded-lg mb-4">
              <svg className="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
                <path fillRule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clipRule="evenodd" />
              </svg>
              –ü–æ–º–∏–ª–∫–∞: {error}
            </div>
            <button
              onClick={() => fetchUniversities()}
              className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
            >
              –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ –∑–Ω–æ–≤—É
            </button>
          </div>
        </div>
      )}

      {/* –ö–∞—Ä—Ç–∞ –∞–±–æ fallback */}
      {!loading && !error && isClient ? (
        <>
          {console.log('UniversityMap: –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ ClientMap –∑', filteredUniversities.length, '—É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—ñ–≤')}
          <ClientMap 
            filteredUniversities={filteredUniversities}
            onUniversitySelect={setSelectedUniversity}
          />
        </>
      ) : !loading && !error && (
        <div className="w-full h-full bg-gray-50 flex items-center justify-center">
          <div className="bg-white p-8 rounded-lg shadow-lg max-w-2xl w-full mx-4">
            <h2 className="text-2xl font-bold text-gray-900 mb-6 text-center">
              üó∫Ô∏è –£–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç–∏ –Ñ–≤—Ä–æ–ø–∏
            </h2>
            
            <div className="space-y-4">
              {filteredUniversities.map((university) => (
                <div 
                  key={university.id}
                  className="border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow cursor-pointer"
                  onClick={() => setSelectedUniversity(university)}
                >
                  <div className="flex items-start justify-between">
                    <div className="flex-1">
                      <div className="flex items-center space-x-2 mb-2">
                        <div 
                          className="w-4 h-4 rounded-full"
                          style={{ backgroundColor: getMarkerColor(university.type) }}
                        ></div>
                        <h3 className="font-semibold text-gray-900">{university.name}</h3>
                      </div>
                      
                      <div className="text-sm text-gray-600 space-y-1">
                        <div>üìç {university.city}, {university.country}</div>
                        <div>üèõÔ∏è {university.type}</div>
                        <div>‚≠ê –†–µ–π—Ç–∏–Ω–≥: {university.rating.toFixed(1)}/5</div>
                        <div>üí∞ {university.tuition}</div>
                      </div>

                      {university.description && (
                        <div className="mt-2 text-xs text-gray-500">
                          {university.description.length > 100 
                            ? `${university.description.substring(0, 100)}...` 
                            : university.description
                          }
                        </div>
                      )}

                      {university.programs && university.programs.length > 0 && (
                        <div className="mt-2">
                          <div className="flex flex-wrap gap-1">
                            {university.programs.slice(0, 2).map((program, index) => (
                              <span key={index} className="px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded">
                                {program}
                              </span>
                            ))}
                            {university.programs.length > 2 && (
                              <span className="px-2 py-1 bg-gray-100 text-gray-600 text-xs rounded">
                                +{university.programs.length - 2}
                              </span>
                            )}
                          </div>
                        </div>
                      )}
                    </div>

                    <div className="flex flex-col space-y-2 ml-4">
                      <Link
                        to={`/university/${university.id}`}
                        className="px-3 py-1 bg-blue-600 text-white text-xs rounded hover:bg-blue-700 transition-colors text-center"
                      >
                        –î–µ—Ç–∞–ª—ñ
                      </Link>
                      <button className="px-3 py-1 bg-gray-200 text-gray-700 text-xs rounded hover:bg-gray-300 transition-colors">
                        ‚ù§Ô∏è –£–ª—é–±–ª–µ–Ω–µ
                      </button>
                    </div>
                  </div>
                </div>
              ))}
            </div>

            {filteredUniversities.length === 0 && (
              <div className="text-center py-8">
                <div className="text-gray-400 text-6xl mb-4">üó∫Ô∏è</div>
                <p className="text-gray-600">–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—ñ–≤ –∑–∞ –æ–±—Ä–∞–Ω–∏–º–∏ –∫—Ä–∏—Ç–µ—Ä—ñ—è–º–∏</p>
              </div>
            )}
          </div>
        </div>
      )}

      {/* –ü–æ–ø–∞–ø –∑ –¥–µ—Ç–∞–ª—å–Ω–æ—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é */}
      {selectedUniversity && (
        <div className="absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[1001]">
          <div className="bg-white rounded-lg p-6 max-w-md w-full mx-4">
            <div className="flex justify-between items-start mb-4">
              <h3 className="font-semibold text-gray-900 text-lg">
                {selectedUniversity.name}
              </h3>
              <button 
                onClick={() => setSelectedUniversity(null)}
                className="text-gray-400 hover:text-gray-600"
              >
                ‚úï
              </button>
            </div>
            
            <div className="space-y-3 text-sm text-gray-600">
              <div>üìç {selectedUniversity.city}, {selectedUniversity.country}</div>
              <div>üèõÔ∏è {selectedUniversity.type}</div>
              <div>‚≠ê –†–µ–π—Ç–∏–Ω–≥: {selectedUniversity.rating.toFixed(1)}/5</div>
              <div>üí∞ {selectedUniversity.tuition}</div>
            </div>

            {selectedUniversity.description && (
              <div className="mt-4">
                <h4 className="font-medium text-gray-700 mb-2">–û–ø–∏—Å:</h4>
                <p className="text-sm text-gray-600">
                  {selectedUniversity.description}
                </p>
              </div>
            )}

            <div className="mt-6 flex space-x-3">
              <Link
                to={`/university/${selectedUniversity.id}`}
                className="flex-1 bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700 transition-colors text-center"
              >
                –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –¥–µ—Ç–∞–ª—ñ
              </Link>
              <button className="flex-1 bg-gray-200 text-gray-700 py-2 px-4 rounded hover:bg-gray-300 transition-colors">
                ‚ù§Ô∏è –î–æ–¥–∞—Ç–∏ –¥–æ —É–ª—é–±–ª–µ–Ω–∏—Ö
              </button>
            </div>
          </div>
        </div>
      )}

      {/* –õ–µ–≥–µ–Ω–¥–∞ */}
      <div className="absolute bottom-4 left-4 z-[1000] bg-white p-3 rounded-lg shadow-lg">
        <h4 className="font-semibold text-gray-900 text-sm mb-2">–õ–µ–≥–µ–Ω–¥–∞</h4>
        <div className="space-y-1 text-xs">
          <div className="flex items-center space-x-2">
            <div className="w-3 h-3 bg-blue-500 rounded-full"></div>
            <span className="text-gray-700">–î–µ—Ä–∂–∞–≤–Ω—ñ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç–∏</span>
          </div>
          <div className="flex items-center space-x-2">
            <div className="w-3 h-3 bg-green-500 rounded-full"></div>
            <span className="text-gray-700">–ü—Ä–∏–≤–∞—Ç–Ω—ñ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç–∏</span>
          </div>
        </div>
      </div>

      {/* –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó */}
      <div className="absolute top-4 right-4 z-[1000] bg-white p-3 rounded-lg shadow-lg">
        <h4 className="font-semibold text-gray-900 text-sm mb-2">üó∫Ô∏è –ö–∞—Ä—Ç–∞ –Ñ–≤—Ä–æ–ø–∏</h4>
        <div className="text-xs text-gray-700 space-y-1">
          <div>‚Ä¢ –ö–ª—ñ–∫–∞–π—Ç–µ –Ω–∞ –º–∞—Ä–∫–µ—Ä–∏ –¥–ª—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó</div>
          <div>‚Ä¢ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Ñ—ñ–ª—å—Ç—Ä–∏ –∑–ª—ñ–≤–∞</div>
          <div>‚Ä¢ –ó—É–º —Ç–∞ –ø–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è –º–∏—à–µ—é</div>
        </div>
      </div>
    </div>
  );
} 