import { useState, useEffect } from "react";
import { Link } from "react-router";
import { useUniversities } from "../hooks/useUniversities";

export default function SearchForm({ onSearchResults }) {
  const [searchQuery, setSearchQuery] = useState("");
  const [selectedCountry, setSelectedCountry] = useState("");
  const [selectedSpecialty, setSelectedSpecialty] = useState("");
  const [budgetRange, setBudgetRange] = useState("");
  const [showAdvanced, setShowAdvanced] = useState(false);
  const [countries, setCountries] = useState([]);
  const [specialties, setSpecialties] = useState([]);

  const { searchUniversities, getCountries, getSpecialties } = useUniversities();

  const budgetRanges = [
    "–î–æ 5000$ –Ω–∞ —Ä—ñ–∫",
    "5000-10000$ –Ω–∞ —Ä—ñ–∫", 
    "10000-20000$ –Ω–∞ —Ä—ñ–∫",
    "20000-30000$ –Ω–∞ —Ä—ñ–∫",
    "–ü–æ–Ω–∞–¥ 30000$ –Ω–∞ —Ä—ñ–∫"
  ];

  // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫—Ä–∞—ó–Ω —Ç–∞ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ—Å—Ç–µ–π –ø—Ä–∏ –º–æ–Ω—Ç—É–≤–∞–Ω–Ω—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    const loadFilterData = async () => {
      const countriesData = await getCountries();
      const specialtiesData = await getSpecialties();
      
      setCountries(countriesData);
      setSpecialties(specialtiesData);
    };

    loadFilterData();
  }, [getCountries, getSpecialties]);

  const handleSearch = async (e) => {
    e.preventDefault();
    
    const searchParams = {
      query: searchQuery,
      country: selectedCountry,
      specialty: selectedSpecialty,
      budgetRange: budgetRange
    };

    console.log("–ü–æ—à—É–∫:", searchParams);
    
    try {
      await searchUniversities(searchParams);
      // –í–∏–∫–ª–∏–∫–∞—î–º–æ callback –∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
      if (onSearchResults) {
        onSearchResults(searchParams);
      }
    } catch (error) {
      console.error("–ü–æ–º–∏–ª–∫–∞ –ø–æ—à—É–∫—É:", error);
    }
  };

  const handleQuickSearch = async (query) => {
    setSearchQuery(query);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π –ø–æ—à—É–∫ –¥–ª—è —à–≤–∏–¥–∫–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤
    const searchParams = { query };
    try {
      await searchUniversities(searchParams);
      if (onSearchResults) {
        onSearchResults(searchParams);
      }
    } catch (error) {
      console.error("–ü–æ–º–∏–ª–∫–∞ —à–≤–∏–¥–∫–æ–≥–æ –ø–æ—à—É–∫—É:", error);
    }
  };

  return (
    <section className="py-16 bg-white">
      <div className="max-w-6xl mx-auto px-4">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü—ñ—ó */}
        <div className="text-center mb-12">
          <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
            üîç –ó–Ω–∞–π–¥–∏ —Å–≤—ñ–π —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç
          </h2>
          <p className="text-lg text-gray-600 max-w-2xl mx-auto">
            –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ä–æ–∑—à–∏—Ä–µ–Ω—ñ —Ñ—ñ–ª—å—Ç—Ä–∏ –∞–±–æ AI –ø–æ–º—ñ—á–Ω–∏–∫–∞ –¥–ª—è –ø–æ—à—É–∫—É —ñ–¥–µ–∞–ª—å–Ω–æ–≥–æ –Ω–∞–≤—á–∞–ª—å–Ω–æ–≥–æ –∑–∞–∫–ª–∞–¥—É
          </p>
        </div>

        {/* –û—Å–Ω–æ–≤–Ω–∞ —Ñ–æ—Ä–º–∞ –ø–æ—à—É–∫—É */}
        <div className="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-8 shadow-lg">
          <form onSubmit={handleSearch} className="space-y-6">
            {/* –û—Å–Ω–æ–≤–Ω–∏–π –ø–æ—à—É–∫ */}
            <div className="relative">
              <div className="absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none">
                <svg className="h-6 w-6 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                </svg>
              </div>
              <input
                type="text"
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
                placeholder="–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—É, —Å–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ—Å—Ç—å –∞–±–æ –º—ñ—Å—Ç–æ..."
                className="w-full pl-12 pr-4 py-4 text-lg border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 text-gray-900 bg-white"
              />
            </div>

            {/* –®–≤–∏–¥–∫—ñ –ø–æ—à—É–∫–∏ */}
            <div className="flex flex-wrap gap-2">
              <span className="text-sm text-gray-600 mr-2">–ü–æ–ø—É–ª—è—Ä–Ω—ñ –∑–∞–ø–∏—Ç–∏:</span>
              {["–ú–µ–¥–∏—Ü–∏–Ω–∞ –≤ –ü–æ–ª—å—â—ñ", "IT –≤ –ß–µ—Ö—ñ—ó", "–ë—ñ–∑–Ω–µ—Å –≤ –ù—ñ–º–µ—á—á–∏–Ω—ñ", "–ú–∏—Å—Ç–µ—Ü—Ç–≤–æ –≤ –Ü—Ç–∞–ª—ñ—ó"].map((query) => (
                <button
                  key={query}
                  type="button"
                  onClick={() => handleQuickSearch(query)}
                  className="px-3 py-1 text-sm bg-blue-100 text-blue-700 rounded-full hover:bg-blue-200 transition-colors"
                >
                  {query}
                </button>
              ))}
            </div>

            {/* –†–æ–∑—à–∏—Ä–µ–Ω—ñ —Ñ—ñ–ª—å—Ç—Ä–∏ */}
            <div className="border-t border-gray-200 pt-6">
              <button
                type="button"
                onClick={() => setShowAdvanced(!showAdvanced)}
                className="flex items-center text-blue-600 hover:text-blue-700 font-medium"
              >
                <svg className={`h-5 w-5 mr-2 transition-transform ${showAdvanced ? 'rotate-180' : ''}`} fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
                </svg>
                –†–æ–∑—à–∏—Ä–µ–Ω—ñ —Ñ—ñ–ª—å—Ç—Ä–∏
              </button>

              {showAdvanced && (
                <div className="mt-6 grid grid-cols-1 md:grid-cols-3 gap-6 animate-fadeIn">
                  {/* –ö—Ä–∞—ó–Ω–∞ */}
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      üåç –ö—Ä–∞—ó–Ω–∞
                    </label>
                    <select
                      value={selectedCountry}
                      onChange={(e) => setSelectedCountry(e.target.value)}
                      className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-gray-900 bg-white"
                    >
                      <option value="" className="text-gray-900">–í—Å—ñ –∫—Ä–∞—ó–Ω–∏</option>
                      {countries.map((country) => (
                        <option key={country} value={country} className="text-gray-900">{country}</option>
                      ))}
                    </select>
                  </div>

                  {/* –°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ—Å—Ç—å */}
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      üìö –°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ—Å—Ç—å
                    </label>
                    <select
                      value={selectedSpecialty}
                      onChange={(e) => setSelectedSpecialty(e.target.value)}
                      className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-gray-900 bg-white"
                    >
                      <option value="" className="text-gray-900">–í—Å—ñ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ—Å—Ç—ñ</option>
                      {specialties.map((specialty) => (
                        <option key={specialty} value={specialty} className="text-gray-900">{specialty}</option>
                      ))}
                    </select>
                  </div>

                  {/* –ë—é–¥–∂–µ—Ç */}
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      üí∞ –ë—é–¥–∂–µ—Ç –Ω–∞ —Ä—ñ–∫
                    </label>
                    <select
                      value={budgetRange}
                      onChange={(e) => setBudgetRange(e.target.value)}
                      className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-gray-900 bg-white"
                    >
                      <option value="" className="text-gray-900">–ë—É–¥—å-—è–∫–∏–π –±—é–¥–∂–µ—Ç</option>
                      {budgetRanges.map((range) => (
                        <option key={range} value={range} className="text-gray-900">{range}</option>
                      ))}
                    </select>
                  </div>
                </div>
              )}
            </div>

            {/* –ö–Ω–æ–ø–∫–∏ –¥—ñ–π */}
            <div className="flex flex-col sm:flex-row gap-4 pt-6">
              <button
                type="submit"
                className="flex-1 bg-blue-600 hover:bg-blue-700 text-white font-semibold py-4 px-8 rounded-xl transition-all duration-200 transform hover:scale-105 shadow-lg"
              >
                üîç –ü–æ—á–∞—Ç–∏ –ø–æ—à—É–∫
              </button>
              <Link
                to="/ai-assistant"
                className="flex-1 bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white font-semibold py-4 px-8 rounded-xl transition-all duration-200 text-center flex items-center justify-center"
              >
                ü§ñ AI –ø–æ–º—ñ—á–Ω–∏–∫
              </Link>
            </div>
          </form>
        </div>

        {/* –î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è */}
        <div className="mt-8 text-center">
          <p className="text-gray-600">
            üí° <strong>–ü–æ—Ä–∞–¥–∞:</strong> –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π AI –ø–æ–º—ñ—á–Ω–∏–∫–∞ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑–æ–≤–∞–Ω–∏—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π
          </p>
        </div>
      </div>
    </section>
  );
} 